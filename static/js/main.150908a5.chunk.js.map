{"version":3,"sources":["components/headers/MainHeader.tsx","components/footer/MainFooter.tsx","components/Section.tsx","components/home/ProjectCard.tsx","pages/Index.tsx","components/InputText.tsx","components/Button.tsx","pages/image-classification/Index.tsx","App.tsx","index.tsx"],"names":["MainHeader","id","className","href","src","process","alt","width","MainFooter","target","rel","icon","faGithub","Section","props","class","children","ProjectCard","to","path","image","name","description","projects","Home","map","p","InputText","type","placeholder","value","onChange","Button","res","theme","dynamicClass","onClick","text","ImageClassificationPage","useState","urlString","setUrlString","model","setModel","predictions","setPredictions","imgRef","useRef","a","fetch","console","log","url","classifyModel","current","classify","useEffect","undefined","setTimeout","tf","mobilenet","net","loadModel","e","ref","crossOrigin","probability","toFixed","App","basename","exact","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.150908a5.chunk.js","sourcesContent":["const MainHeader = () => {\n    return (\n        <div id=\"MainHeader\" className=\"bg-black text-white\">\n            <div className=\"container mx-auto p-2\">\n                <div id=\"logo-container\">\n                    <a className=\"flex items-center\" href='https://ahtle.github.io/tensorflow-practice/'>\n                        <img src={`${process.env.PUBLIC_URL}/images/logo192.png`} alt=\"React logo\" width=\"25\"/>\n                        <p className=\"text-xl mx-2\"><span className=\"text-react-color\">React</span> x <span className=\"text-tensorflow-color\">TensorFlow</span></p>\n                        <img src={`${process.env.PUBLIC_URL}/images/tf-logo.png`} alt=\"TensorFlow logo\" width=\"25\"/>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default MainHeader;","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst MainFooter = () => {\n    return (\n        <footer id=\"MainFooter\" className=\"w-full bg-black text-white\">\n            <div className=\"container mx-auto p-2 flex justify-center\">\n                <a href=\"https://github.com/ahtle/tensorflow-practice\" target=\"_blank\" rel=\"noreferrer\"><FontAwesomeIcon icon={faGithub} className=\"h-8 w-8\"/></a>\n            </div>\n        </footer>\n    )\n};\n\nexport default MainFooter;","import { ReactNode } from 'react';\n\ntype Props = {\n    children: ReactNode,\n    class?: string\n}\n\nconst Section = (props: Props) => {\n    return (\n        <div className={`py-10 ${props.class}`}>\n            <div className=\"container mx-auto\">\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Section;","import { Link } from 'react-router-dom';\nimport './project-card.scss';\n\ntype Props = {\n    name: string,\n    description: string,\n    image: string\n    path: string\n}\n\nconst ProjectCard = (props: Props) => {\n    return (\n        <Link className=\"project-card mx-8 my-4 rounded overflow-hidden cursor-pointer transition group shadow hover:shadow-lg\"\n            to={props.path}\n        >\n            <div className=\"img-wrapper flex items-center border-b border-gray-200 bg-blue-50\">\n                <img src={`${process.env.PUBLIC_URL}/images/${props.image}`} alt={props.name}/>\n            </div>\n            <div className='card-body p-4 group-hover:bg-yellow-600 transition'>\n                <p className=\"text-bold text-blue-900 text-lg mb-2 group-hover:text-white\">{props.name}</p>\n                <p className=\"text-gray-400 group-hover:text-white transition\">{props.description}</p>\n            </div>\n        </Link>\n    )\n}\n\nexport default ProjectCard;","import Section from '../components/Section';\nimport ProjectCard from '../components/home/ProjectCard';\n\n\nconst projects = [\n    {name: 'Image classification', description: `Upload images and I'll tell you what it is!`, path: '/image-classification', image: 'tf-image-classification-logo.png'},\n]\n\nconst Home = () => {\n    return (\n        <div id=\"Home\">\n            \n            {/* intro section */}\n            <Section\n                class=\"bg-gray-600 text-white\"\n            >\n                <>\n                    <h1 className=\"text-center mb-10\">Practice site for...</h1>\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                        <div id=\"react-wrapper\" className=\"flex flex-col items-center mb-5 md:mb-0\">\n                            <h1 className=\"text-react-color text-bold mb-5\">React</h1>\n                            <p className=\"text-center\">A JavaScript library for building user interfaces</p>\n                        </div>\n                        <div className=\"flex flex-col items-center mb-5 md:mb-0\">\n                            <h1 className=\"text-tensorflow-color text-bold mb-5\">Tensorflow</h1>\n                            <p className=\"text-center\">An end-to-end open source platform for machine learning</p>\n                        </div>\n                    </div>\n                </>\n            </Section>\n            \n            {/* topics section */}\n            <Section>\n                <>\n                    <h1 className=\"text-center mb-14\">Mini projects:</h1>\n                    <div className=\"flex justify-center\">\n                        \n                        {projects.map(p => {\n                            return (\n                                <ProjectCard \n                                    key={p.name}\n                                    name={p.name}\n                                    description={p.description}\n                                    image={p.image}\n                                    path={p.path}\n                                />\n                            )\n                        })}\n\n\n                    </div>\n                </>\n            </Section>\n\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\n\ntype Props = {\n    className?: string,\n    placeholder?: string,\n    value: string,\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\n}\n\nconst InputText = (props: Props) => {\n    return (\n        <input type=\"text\" className={`${props.className} border border-gray-200 rounded px-4 py-2 w-full`}\n            placeholder={props.placeholder} \n            value={props.value}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default InputText;","type Props = {\n    text: string,\n    theme?: string,\n    onClick: () => void,\n}\n\nconst Button = (props: Props) => {\n    const dynamicClass = () => {\n        let res;\n        if (props.theme === 'tf') {\n            res = 'border-tensorflow-color hover:border-red-700 hover:bg-red-700 hover:text-white';\n        }\n        return res;\n    }\n\n    return (\n        <button className={`${dynamicClass()} border-2 px-8 py-2 rounded text-2xl transition`}  onClick={props.onClick}>{props.text}</button>\n    )\n}\n\nexport default Button;","import React, { useState, useRef, useEffect } from 'react';\nimport Section from '../../components/Section';\nimport InputText from '../../components/InputText';\nimport Button from '../../components/Button';\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\n\nconst ImageClassificationPage = () => {\n    const [urlString, setUrlString] = useState('https://media4.s-nbcnews.com/j/newscms/2016_36/1685951/ss-160826-twip-05_8cf6d4cb83758449fd400c7c3d71aa1f.fit-760w.jpg');\n    const [model, setModel] = useState<mobilenet.MobileNet>();\n    const [predictions, setPredictions] = useState<{className: string, probability: number}[]>();\n    const imgRef = useRef<HTMLImageElement>(null);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setUrlString(e.target.value);\n    };\n\n    const onClick = async () => {\n        try {\n            const res = await fetch('https://picsum.photos/400');\n            console.log(res);\n            setUrlString(res.url);\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    const classifyModel = async () => {\n        if (model && imgRef.current) {\n            try {\n                const p = await model.classify(imgRef.current);\n                setPredictions(p);\n            }  catch(e) {\n                console.log(e);\n            }\n        }\n    };\n    \n    useEffect(() => {\n        setPredictions(undefined);\n        setTimeout(() => {\n            classifyModel();\n        }, 500);\n    }, [urlString]);\n\n    useEffect(() => {\n        classifyModel();\n    }, [model]);\n    \n    useEffect( () => {\n        async function loadModel() {\n            tf.getBackend();\n            const net = await mobilenet.load();\n            setModel(net);\n        }\n        loadModel();\n    }, []);\n\n    return (\n        <div id=\"ImageClassificationPage\" className=\"px-4 md:px-0\">\n            <Section>\n                <h1 className=\"text-center mb-10\">Image Classification</h1>\n                <h2 className=\"text-center text-bold text-tensorflow-color\" >Classify images with labels from the ImageNet database</h2>\n\n            </Section>\n\n            <Section>\n                <div className=\"grid md:grid-cols-2 gap-4\">\n                    {/* col 1 */}\n                    <div className=\"flex flex-col items-center\">\n                        <label>Paste in an image URL</label>\n                        <div className=\"mt-4 mb-10 w-full md:w-2/3\">\n                            <InputText\n                                placeholder=\"https://...\"\n                                value={urlString}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <p className=\"mb-10\">Or</p>\n\n                        <Button\n                            text=\"Get random image\"\n                            theme=\"tf\"\n                            onClick={onClick}\n                        />\n\n                    </div>\n                    \n                    {/* col 2 */}\n                    <div className=\"flex flex-col items-center\">\n                        <div className=\"flex flex-col items-center  w-full md:w-2/3\">\n                            <img src={urlString} ref={imgRef} crossOrigin=\"anonymous\"/>\n                            \n                            {\n                                predictions ? (\n                                    <div className=\"w-full bg-gray-100 py-4 px-8 mt-10\">\n                                        {predictions.map(p => {\n                                            return (\n                                                <div key={p.className} className=\"mb-4\">\n                                                    <p><strong>{p.className}</strong></p>\n                                                    <p>Possibility: { (p.probability * 100).toFixed(2) }%</p>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                ) : <p className=\"mt-10\">Loading</p>\n                            }\n                        </div>\n\n\n                    </div>\n                </div>\n            </Section>\n        </div>\n    )\n}\n\nexport default ImageClassificationPage;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainHeader from './components/headers/MainHeader';\nimport MainFooter from './components/footer/MainFooter';\nimport Home from '../src/pages/Index';\nimport ImageClassificationPage from './pages/image-classification/Index';\nimport './styles/index.css';\n\nfunction App() {\n  return (\n    <>\n      <Router basename=\"/\">  \n        <MainHeader />\n\n        <div className=\"min-h-screen\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/image-classification\" exact component={ImageClassificationPage} />\n            <Route render={() => <h1>404: page not found</h1>} />\n          </Switch>\n        </div>\n      </Router>\n\n      <MainFooter />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}